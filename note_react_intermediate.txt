 1 - Prerequisites
    + Basic of Typescrip
    + Building Components
    + Styling Components
    + Manging Components State
    + Calling backend Service

2 - What You'll Learn
    1/ React Query
        - Caching
        - Automatic retry
        - Automatic refresh
        - Paginated Queries
        - Infinite Queries

    2/ Global State Management
        - Reducer
        - Context
        - Providers
        - Zustand
    3/ Routing with React Router

PART 1 : Queries data
    - Fetch data
    - Handle errors
    - Implements pagination
    - Implements inifinte Queries
    - Debug Queries with react Query tools

PART 2 :  Mutating data
    - Handle CRUD operations
    - Implements optimistic updates
    - Create custom hooks
    - Create reusable services

* Caching : The process of storing data in a place where it can be accessed more quickly and Efficiency in the future.
* Problem:
    - No request cancellation
    - No separation of concerns
    - No retries
    - No automatic refresh
    - No caching
* React Query: A powerful library for managing data fetching and caching in react application.

* Install react-query : npm i @tanstack/react-query@latest
* Install react-query tool : npm i @tanstack/react-query-devtools@latest

* Auto refresh
    - When the network is reconnected
    - When a Component is mounted
    - When the window is refocused

* Next
    - Creating mutations
    - Handing mutation errors
    - Implemention optimistic updates
    - Create custom mutation hooks
    - Building services for querying/mutation data

* Application Layers
    - Components    => TodoFrom, TodoList
    - Custom Hook   => useTodos,useAddTodo
    - HTTP Service  => todoService
    - API Client    => APIClient

API_KEY_GAME=f8e3607080424c63a12e70d9dc506617
 - Genres => https://api.rawg.io/api/genres?key=f8e3607080424c63a12e70d9dc506617
 - Game   => https://api.rawg.io/api/games?key=f8e3607080424c63a12e70d9dc506617
 - Platform => https://api.rawg.io/api/platforms?key=f8e3607080424c63a12e70d9dc506617
 - Platform parent =>  https://api.rawg.io/api/platforms/lists/parents?key=f8e3607080424c63a12e70d9dc506617

+ video 20 Mutation data
+ video 27 Understanding Application Layers
    - Components    => TodoFrom, TodoList
    - Custom Hook   => useTodos,useAddTodo
    - HTTP Service  => todoService
    - API Client    => APIClient
+ video 34 implementing infinite queries
    https://api.rawg.io/docs/#operation/games_list => api doc games
+video35 npm i react-infinite-scroll-component@6.1

+ video 39
*** Global State Management ***
    - Consolidating state logic with a Reducer
    - Sharing data using React context
    - When to use React context
    - React Context vs Redux
    - Managing application state using Zustand

+ video 40 
    Reduce => a function that allows us to centralize state updates in component.

+ video 43 Redux

+ video 61 set up Zustand

+ video 74 you will Learn
    - Setting up routes
    - Handing errors
    - Navigation between pages
    - Dynamic routes
    - Nested routes
    - Private routes


